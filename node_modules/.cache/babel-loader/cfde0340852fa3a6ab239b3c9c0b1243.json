{"ast":null,"code":"import _objectSpread from\"/Users/nguyencanhnguyen/Public/Development/condi-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/nguyencanhnguyen/Public/Development/condi-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{withFormik}from\"formik\";import*as Yup from\"yup\";import{useDispatch}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{postUserSignUp}from\"../../apis\";import{saveUserInStore}from\"../../../../redux/actions\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function FormSignUp(props){var dispatch=useDispatch();var history=useHistory();var _useState=useState(),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var handleSubmit=function handleSubmit(e){e.preventDefault();var _props$values=props.values,username=_props$values.username,email=_props$values.email,password=_props$values.password;postUserSignUp({username:username,email:email,password:password}).then(function(res){var _res$data;var user=(_res$data=res.data)===null||_res$data===void 0?void 0:_res$data.user;dispatch(saveUserInStore.saveUserInStoreSuccess(user));window.localStorage.setItem(\"jwtToken\",user.token);history.push(\"/\");}).catch(function(e){var _e$response,_e$response$data;var errorObject=_objectSpread({},(_e$response=e.response)===null||_e$response===void 0?void 0:(_e$response$data=_e$response.data)===null||_e$response$data===void 0?void 0:_e$response$data.errors);if(errorObject.hasOwnProperty(\"username\"))setError(errorObject);else{var _errorObject$error;if((_errorObject$error=errorObject.error)===null||_errorObject$error===void 0?void 0:_errorObject$error.keyPattern.hasOwnProperty(\"username\"))setError({errors:\"Username is already taken\"});else setError({errors:\"Email is already taken\"});}});};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"fieldset\",{className:\"form-group\",children:[error&&Object.keys(error).map(function(obj,i){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{className:\"error-messages\",children:[\"* \",error[obj]]})},i);}),/*#__PURE__*/_jsx(\"p\",{className:\"error-messages\",children:props.errors.username}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control form-control-lg\",type:\"text\",placeholder:\"Username\",name:\"username\",value:props.values.username,onChange:props.handleChange})]}),/*#__PURE__*/_jsxs(\"fieldset\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"error-messages\",children:props.errors.email}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control form-control-lg\",type:\"text\",placeholder:\"Email\",name:\"email\",value:props.values.email,onChange:props.handleChange})]}),/*#__PURE__*/_jsxs(\"fieldset\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"error-messages\",children:props.errors.password}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control form-control-lg\",type:\"password\",placeholder:\"Password\",name:\"password\",value:props.values.password,onChange:props.handleChange})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-lg btn-primary pull-xs-right\",disabled:!props.isValid||!props.values.email,children:\"Sign up\"})]});}var FormikFormSignUp=withFormik({mapPropsToValues:function mapPropsToValues(){// Init form field\nreturn{username:\"\",email:\"\",password:\"\"};},validationSchema:Yup.object().shape({// Validate form field\nusername:Yup.string().required(\"Username is required\"),email:Yup.string().email().required(\"Email is required\"),password:Yup.string().required(\"Please provide a valid password\")}),handleSubmit:function handleSubmit(){}})(FormSignUp);export default FormikFormSignUp;","map":{"version":3,"sources":["/Users/nguyencanhnguyen/Public/Development/condi-app/src/pages/SignUp/components/FormSignUp/index.tsx"],"names":["useState","withFormik","Yup","useDispatch","useHistory","postUserSignUp","saveUserInStore","FormSignUp","props","dispatch","history","error","setError","handleSubmit","e","preventDefault","values","username","email","password","then","res","user","data","saveUserInStoreSuccess","window","localStorage","setItem","token","push","catch","errorObject","response","errors","hasOwnProperty","keyPattern","Object","keys","map","obj","i","handleChange","isValid","FormikFormSignUp","mapPropsToValues","validationSchema","object","shape","string","required"],"mappings":"qVAAA,OAAyBA,QAAzB,KAAyC,OAAzC,CACA,OAASC,UAAT,KAAgD,QAAhD,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,cAAT,KAA+B,YAA/B,CACA,OAASC,eAAT,KAAgC,2BAAhC,C,wFAGA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAAuE,CACrE,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,GAAMO,CAAAA,OAAO,CAAGN,UAAU,EAA1B,CACA,cAA0BJ,QAAQ,EAAlC,wCAAOW,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAuB,CAC1CA,CAAC,CAACC,cAAF,GACA,kBAAsCP,KAAK,CAACQ,MAA5C,CAAQC,QAAR,eAAQA,QAAR,CAAkBC,KAAlB,eAAkBA,KAAlB,CAAyBC,QAAzB,eAAyBA,QAAzB,CAEAd,cAAc,CAAC,CAAEY,QAAQ,CAARA,QAAF,CAAYC,KAAK,CAALA,KAAZ,CAAmBC,QAAQ,CAARA,QAAnB,CAAD,CAAd,CACGC,IADH,CACQ,SAACC,GAAD,CAAS,eACb,GAAMC,CAAAA,IAAI,YAAGD,GAAG,CAACE,IAAP,oCAAG,UAAUD,IAAvB,CACAb,QAAQ,CAACH,eAAe,CAACkB,sBAAhB,CAAuCF,IAAvC,CAAD,CAAR,CACAG,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAwCL,IAAI,CAACM,KAA7C,EACAlB,OAAO,CAACmB,IAAR,CAAa,GAAb,EACD,CANH,EAOGC,KAPH,CAOS,SAAChB,CAAD,CAAO,kCACZ,GAAMiB,CAAAA,WAAW,+BAAQjB,CAAC,CAACkB,QAAV,wDAAQ,YAAYT,IAApB,2CAAQ,iBAAkBU,MAA1B,CAAjB,CACA,GAAIF,WAAW,CAACG,cAAZ,CAA2B,UAA3B,CAAJ,CAA4CtB,QAAQ,CAACmB,WAAD,CAAR,CAA5C,IACK,wBACH,uBAAIA,WAAW,CAACpB,KAAhB,6CAAI,mBAAmBwB,UAAnB,CAA8BD,cAA9B,CAA6C,UAA7C,CAAJ,CACEtB,QAAQ,CAAC,CAAEqB,MAAM,CAAE,2BAAV,CAAD,CAAR,CADF,IAEKrB,CAAAA,QAAQ,CAAC,CAAEqB,MAAM,CAAE,wBAAV,CAAD,CAAR,CACN,CACF,CAfH,EAgBD,CApBD,CAsBA,mBACE,cAAM,QAAQ,CAAEpB,YAAhB,wBACE,kBAAU,SAAS,CAAC,YAApB,WACGF,KAAK,EACJyB,MAAM,CAACC,IAAP,CAAY1B,KAAZ,EAAmB2B,GAAnB,CAAuB,SAACC,GAAD,CAAMC,CAAN,CAAY,CACjC,mBACE,kCACE,WAAG,SAAS,CAAC,gBAAb,gBAAiC7B,KAAK,CAAC4B,GAAD,CAAtC,GADF,EAAUC,CAAV,CADF,CAKD,CAND,CAFJ,cASE,UAAG,SAAS,CAAC,gBAAb,UAA+BhC,KAAK,CAACyB,MAAN,CAAahB,QAA5C,EATF,cAUE,cACE,SAAS,CAAC,8BADZ,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,UAHd,CAIE,IAAI,CAAC,UAJP,CAKE,KAAK,CAAET,KAAK,CAACQ,MAAN,CAAaC,QALtB,CAME,QAAQ,CAAET,KAAK,CAACiC,YANlB,EAVF,GADF,cAoBE,kBAAU,SAAS,CAAC,YAApB,wBACE,UAAG,SAAS,CAAC,gBAAb,UAA+BjC,KAAK,CAACyB,MAAN,CAAaf,KAA5C,EADF,cAEE,cACE,SAAS,CAAC,8BADZ,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,OAHd,CAIE,IAAI,CAAC,OAJP,CAKE,KAAK,CAAEV,KAAK,CAACQ,MAAN,CAAaE,KALtB,CAME,QAAQ,CAAEV,KAAK,CAACiC,YANlB,EAFF,GApBF,cA+BE,kBAAU,SAAS,CAAC,YAApB,wBACE,UAAG,SAAS,CAAC,gBAAb,UAA+BjC,KAAK,CAACyB,MAAN,CAAad,QAA5C,EADF,cAEE,cACE,SAAS,CAAC,8BADZ,CAEE,IAAI,CAAC,UAFP,CAGE,WAAW,CAAC,UAHd,CAIE,IAAI,CAAC,UAJP,CAKE,KAAK,CAAEX,KAAK,CAACQ,MAAN,CAAaG,QALtB,CAME,QAAQ,CAAEX,KAAK,CAACiC,YANlB,EAFF,GA/BF,cA0CE,eACE,SAAS,CAAC,sCADZ,CAEE,QAAQ,CAAE,CAACjC,KAAK,CAACkC,OAAP,EAAkB,CAAClC,KAAK,CAACQ,MAAN,CAAaE,KAF5C,qBA1CF,GADF,CAmDD,CAED,GAAMyB,CAAAA,gBAAgB,CAAG1C,UAAU,CAAC,CAClC2C,gBADkC,4BACf,CACjB;AACA,MAAO,CACL3B,QAAQ,CAAE,EADL,CAELC,KAAK,CAAE,EAFF,CAGLC,QAAQ,CAAE,EAHL,CAAP,CAKD,CARiC,CASlC0B,gBAAgB,CAAE3C,GAAG,CAAC4C,MAAJ,GAAaC,KAAb,CAAmB,CACnC;AACA9B,QAAQ,CAAEf,GAAG,CAAC8C,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CAFyB,CAGnC/B,KAAK,CAAEhB,GAAG,CAAC8C,MAAJ,GAAa9B,KAAb,GAAqB+B,QAArB,CAA8B,mBAA9B,CAH4B,CAInC9B,QAAQ,CAAEjB,GAAG,CAAC8C,MAAJ,GAAaC,QAAb,CAAsB,iCAAtB,CAJyB,CAAnB,CATgB,CAelCpC,YAAY,CAAE,uBAAM,CAAE,CAfY,CAAD,CAAV,CAgBtBN,UAhBsB,CAAzB,CAkBA,cAAeoC,CAAAA,gBAAf","sourcesContent":["import { SyntheticEvent, useState } from \"react\";\nimport { withFormik, InjectedFormikProps } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { postUserSignUp } from \"../../apis\";\nimport { saveUserInStore } from \"../../../../redux/actions\";\nimport { FormProps, FormValues } from \"./interface\";\n\nfunction FormSignUp(props: InjectedFormikProps<FormProps, FormValues>) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [error, setError] = useState<any>();\n\n  const handleSubmit = (e: SyntheticEvent) => {\n    e.preventDefault();\n    const { username, email, password } = props.values;\n\n    postUserSignUp({ username, email, password })\n      .then((res) => {\n        const user = res.data?.user;\n        dispatch(saveUserInStore.saveUserInStoreSuccess(user));\n        window.localStorage.setItem(\"jwtToken\", user.token);\n        history.push(\"/\");\n      })\n      .catch((e) => {\n        const errorObject = { ...e.response?.data?.errors };\n        if (errorObject.hasOwnProperty(\"username\")) setError(errorObject);\n        else {\n          if (errorObject.error?.keyPattern.hasOwnProperty(\"username\"))\n            setError({ errors: \"Username is already taken\" });\n          else setError({ errors: \"Email is already taken\" });\n        }\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <fieldset className=\"form-group\">\n        {error &&\n          Object.keys(error).map((obj, i) => {\n            return (\n              <div key={i}>\n                <p className=\"error-messages\">* {error[obj]}</p>\n              </div>\n            );\n          })}\n        <p className=\"error-messages\">{props.errors.username}</p>\n        <input\n          className=\"form-control form-control-lg\"\n          type=\"text\"\n          placeholder=\"Username\"\n          name=\"username\"\n          value={props.values.username}\n          onChange={props.handleChange}\n        />\n      </fieldset>\n      <fieldset className=\"form-group\">\n        <p className=\"error-messages\">{props.errors.email}</p>\n        <input\n          className=\"form-control form-control-lg\"\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={props.values.email}\n          onChange={props.handleChange}\n        />\n      </fieldset>\n      <fieldset className=\"form-group\">\n        <p className=\"error-messages\">{props.errors.password}</p>\n        <input\n          className=\"form-control form-control-lg\"\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={props.values.password}\n          onChange={props.handleChange}\n        />\n      </fieldset>\n      <button\n        className=\"btn btn-lg btn-primary pull-xs-right\"\n        disabled={!props.isValid || !props.values.email}\n      >\n        Sign up\n      </button>\n    </form>\n  );\n}\n\nconst FormikFormSignUp = withFormik({\n  mapPropsToValues() {\n    // Init form field\n    return {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    };\n  },\n  validationSchema: Yup.object().shape({\n    // Validate form field\n    username: Yup.string().required(\"Username is required\"),\n    email: Yup.string().email().required(\"Email is required\"),\n    password: Yup.string().required(\"Please provide a valid password\"),\n  }),\n  handleSubmit: () => {},\n})(FormSignUp);\n\nexport default FormikFormSignUp;\n"]},"metadata":{},"sourceType":"module"}