{"ast":null,"code":"import _objectSpread from\"/Users/nguyencanhnguyen/Public/Development/condi-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/nguyencanhnguyen/Public/Development/condi-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{withFormik}from\"formik\";import React,{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{useHistory}from\"react-router\";import*as Yup from\"yup\";import{saveUserInStore}from\"../../../../redux/actions\";import{updateUser}from\"../../apis\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function FormSettings(props){var dispatch=useDispatch();var history=useHistory();var user=useSelector(function(state){return state.user.data;});var setFieldValue=props.setFieldValue;useEffect(function(){setFieldValue(\"imageURL\",user.image);setFieldValue(\"username\",user.username);setFieldValue(\"bio\",user.bio);setFieldValue(\"email\",user.email);},[user,setFieldValue]);var _useState=useState(),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var token=window.localStorage.getItem(\"jwtToken\");var handleSubmit=function handleSubmit(e){e.preventDefault();var _props$values=props.values,imageURL=_props$values.imageURL,bio=_props$values.bio,username=_props$values.username,email=_props$values.email,password=_props$values.password;updateUser({imageURL:imageURL,bio:bio,username:username,email:email,password:password},token).then(function(res){var user=res.data.user;dispatch(saveUserInStore.saveUserInStoreSuccess(user));history.push(\"/profile/\".concat(user.username));}).catch(function(e){var errorObject=_objectSpread({},e.response.data.errors);setError(errorObject);});};return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"ul\",{className:\"form-group\",children:error&&Object.keys(error).map(function(obj,i){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"p\",{className:\"error-messages\",children:[obj,\" \",error[obj]]})},i);})}),/*#__PURE__*/_jsx(\"fieldset\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",placeholder:\"URL of profile picture\",name:\"imageURL\",value:props.values.imageURL,onChange:props.handleChange})}),/*#__PURE__*/_jsx(\"fieldset\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{className:\"form-control form-control-lg\",type:\"text\",placeholder:\"Username\",name:\"username\",value:props.values.username,onChange:props.handleChange})}),/*#__PURE__*/_jsx(\"fieldset\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control form-control-lg\",placeholder:\"Short bio about you\",rows:6,name:\"bio\",value:props.values.bio,onChange:props.handleChange})}),/*#__PURE__*/_jsx(\"fieldset\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{className:\"form-control form-control-lg\",type:\"text\",placeholder:\"Email\",name:\"email\",value:props.values.email,onChange:props.handleChange})}),/*#__PURE__*/_jsx(\"fieldset\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{className:\"form-control form-control-lg\",type:\"password\",placeholder:\"Password\",name:\"password\",value:props.values.password,onChange:props.handleChange})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-lg btn-primary pull-xs-right\",children:\"Update Settings\"})]})});}var FormikFormSettings=withFormik({mapPropsToValues:function mapPropsToValues(){// Init form field\nreturn{imageURL:\"\",username:\"\",bio:\"\",email:\"\",password:\"\"};},validationSchema:Yup.object().shape({// Validate form field\nusername:Yup.string().required(\"Username is required\"),email:Yup.string().email().required(\"Email is required\")}),handleSubmit:function handleSubmit(){}})(FormSettings);export default FormikFormSettings;","map":{"version":3,"sources":["/Users/nguyencanhnguyen/Public/Development/condi-app/src/pages/Settings/components/FormSettings/index.tsx"],"names":["withFormik","React","useEffect","useState","useDispatch","useSelector","useHistory","Yup","saveUserInStore","updateUser","FormSettings","props","dispatch","history","user","state","data","setFieldValue","image","username","bio","email","error","setError","token","window","localStorage","getItem","handleSubmit","e","preventDefault","values","imageURL","password","then","res","saveUserInStoreSuccess","push","catch","errorObject","response","errors","Object","keys","map","obj","i","handleChange","FormikFormSettings","mapPropsToValues","validationSchema","object","shape","string","required"],"mappings":"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","sourcesContent":["import { withFormik, InjectedFormikProps } from \"formik\";\nimport React, { SyntheticEvent, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as Yup from \"yup\";\nimport { RootState } from \"../../../..\";\nimport { saveUserInStore } from \"../../../../redux/actions\";\nimport { updateUser } from \"../../apis\";\nimport { FormValues, FormProps } from \"./interface\";\n\nfunction FormSettings(props: InjectedFormikProps<FormProps, FormValues>) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector((state: RootState) => state.user.data);\n  const { setFieldValue } = props;\n\n  useEffect(() => {\n    setFieldValue(\"imageURL\", user.image);\n    setFieldValue(\"username\", user.username);\n    setFieldValue(\"bio\", user.bio);\n    setFieldValue(\"email\", user.email);\n  }, [user, setFieldValue]);\n\n  const [error, setError] = useState();\n  const token = window.localStorage.getItem(\"jwtToken\");\n\n  const handleSubmit = (e: SyntheticEvent) => {\n    e.preventDefault();\n    const { imageURL, bio, username, email, password } = props.values;\n\n    updateUser({ imageURL, bio, username, email, password }, token)\n      .then((res) => {\n        const user = res.data.user;\n        dispatch(saveUserInStore.saveUserInStoreSuccess(user));\n        history.push(`/profile/${user.username}`);\n      })\n      .catch((e) => {\n        const errorObject = { ...e.response.data.errors };\n        setError(errorObject);\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <fieldset>\n        <ul className=\"form-group\">\n          {error &&\n            Object.keys(error).map((obj, i) => {\n              return (\n                <li key={i}>\n                  <p className=\"error-messages\">\n                    {obj} {error[obj]}\n                  </p>\n                </li>\n              );\n            })}\n        </ul>\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"URL of profile picture\"\n            name=\"imageURL\"\n            value={props.values.imageURL}\n            onChange={props.handleChange}\n          />\n        </fieldset>\n        <fieldset className=\"form-group\">\n          {/* <p className=\"error-messages\">{props.errors.username}</p> */}\n\n          <input\n            className=\"form-control form-control-lg\"\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            value={props.values.username}\n            onChange={props.handleChange}\n          />\n        </fieldset>\n        <fieldset className=\"form-group\">\n          <textarea\n            className=\"form-control form-control-lg\"\n            placeholder=\"Short bio about you\"\n            rows={6}\n            name=\"bio\"\n            value={props.values.bio}\n            onChange={props.handleChange}\n          ></textarea>\n        </fieldset>\n        <fieldset className=\"form-group\">\n          {/* <p className=\"error-messages\">{props.errors.email}</p> */}\n          <input\n            className=\"form-control form-control-lg\"\n            type=\"text\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={props.values.email}\n            onChange={props.handleChange}\n          />\n        </fieldset>\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control form-control-lg\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={props.values.password}\n            onChange={props.handleChange}\n          />\n        </fieldset>\n        <button className=\"btn btn-lg btn-primary pull-xs-right\">\n          Update Settings\n        </button>\n      </fieldset>\n    </form>\n  );\n}\n\nconst FormikFormSettings = withFormik({\n  mapPropsToValues() {\n    // Init form field\n    return {\n      imageURL: \"\",\n      username: \"\",\n      bio: \"\",\n      email: \"\",\n      password: \"\",\n    };\n  },\n  validationSchema: Yup.object().shape({\n    // Validate form field\n    username: Yup.string().required(\"Username is required\"),\n    email: Yup.string().email().required(\"Email is required\"),\n  }),\n  handleSubmit: () => {},\n})(FormSettings);\n\nexport default FormikFormSettings;\n"]},"metadata":{},"sourceType":"module"}