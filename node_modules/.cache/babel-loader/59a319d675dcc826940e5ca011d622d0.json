{"ast":null,"code":"var _jsxFileName = \"/Users/nguyencanhnguyen/Public/Development/condi-app/src/pages/SignUp/components/FormSignUp/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { postUserSignUp } from \"../../apis\";\nimport { saveUserInStore } from \"../../../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormSignUp(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [error, setError] = useState();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      email,\n      password\n    } = props.values;\n    postUserSignUp({\n      username,\n      email,\n      password\n    }).then(res => {\n      var _res$data;\n\n      const user = (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.user;\n      dispatch(saveUserInStore.saveUserInStoreSuccess(user));\n      window.localStorage.setItem(\"jwtToken\", user.token);\n      history.push(\"/\");\n    }).catch(e => {\n      var _e$response, _e$response$data;\n\n      const errorObject = { ...((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.errors)\n      };\n      if (errorObject.hasOwnProperty(\"username\")) setError(errorObject);else {\n        var _errorObject$error;\n\n        if ((_errorObject$error = errorObject.error) === null || _errorObject$error === void 0 ? void 0 : _errorObject$error.keyPattern.hasOwnProperty(\"username\")) setError({\n          errors: \"Username is already taken\"\n        });else setError({\n          errors: \"Email is already taken\"\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [error && Object.keys(error).map((obj, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-messages\",\n            children: [\"* \", error[obj]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-messages\",\n        children: props.errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control form-control-lg\",\n        type: \"text\",\n        placeholder: \"Username\",\n        name: \"username\",\n        value: props.values.username,\n        onChange: props.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-messages\",\n        children: props.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control form-control-lg\",\n        type: \"text\",\n        placeholder: \"Email\",\n        name: \"email\",\n        value: props.values.email,\n        onChange: props.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-messages\",\n        children: props.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control form-control-lg\",\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: props.values.password,\n        onChange: props.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-lg btn-primary pull-xs-right\",\n      disabled: !props.isValid || !props.values.email,\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormSignUp, \"m3Dn4TSoZwlM1fvoOiRgvwadLps=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = FormSignUp;\nconst FormikFormSignUp = withFormik({\n  mapPropsToValues() {\n    // Init form field\n    return {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    // Validate form field\n    username: Yup.string().required(\"Username is required\"),\n    email: Yup.string().email().required(\"Email is required\"),\n    password: Yup.string().required(\"Please provide a valid password\")\n  }),\n  handleSubmit: () => {}\n})(FormSignUp);\nexport default FormikFormSignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormSignUp\");","map":{"version":3,"sources":["/Users/nguyencanhnguyen/Public/Development/condi-app/src/pages/SignUp/components/FormSignUp/index.tsx"],"names":["useState","withFormik","Yup","useDispatch","useHistory","postUserSignUp","saveUserInStore","FormSignUp","props","dispatch","history","error","setError","handleSubmit","e","preventDefault","username","email","password","values","then","res","user","data","saveUserInStoreSuccess","window","localStorage","setItem","token","push","catch","errorObject","response","errors","hasOwnProperty","keyPattern","Object","keys","map","obj","i","handleChange","isValid","FormikFormSignUp","mapPropsToValues","validationSchema","object","shape","string","required"],"mappings":"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","sourcesContent":["import { SyntheticEvent, useState } from \"react\";\nimport { withFormik, InjectedFormikProps } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { postUserSignUp } from \"../../apis\";\nimport { saveUserInStore } from \"../../../../redux/actions\";\nimport { FormProps, FormValues } from \"./interface\";\n\nfunction FormSignUp(props: InjectedFormikProps<FormProps, FormValues>) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [error, setError] = useState<any>();\n\n  const handleSubmit = (e: SyntheticEvent) => {\n    e.preventDefault();\n    const { username, email, password } = props.values;\n\n    postUserSignUp({ username, email, password })\n      .then((res) => {\n        const user = res.data?.user;\n        dispatch(saveUserInStore.saveUserInStoreSuccess(user));\n        window.localStorage.setItem(\"jwtToken\", user.token);\n        history.push(\"/\");\n      })\n      .catch((e) => {\n        const errorObject = { ...e.response?.data?.errors };\n        if (errorObject.hasOwnProperty(\"username\")) setError(errorObject);\n        else {\n          if (errorObject.error?.keyPattern.hasOwnProperty(\"username\"))\n            setError({ errors: \"Username is already taken\" });\n          else setError({ errors: \"Email is already taken\" });\n        }\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <fieldset className=\"form-group\">\n        {error &&\n          Object.keys(error).map((obj, i) => {\n            return (\n              <div key={i}>\n                <p className=\"error-messages\">* {error[obj]}</p>\n              </div>\n            );\n          })}\n        <p className=\"error-messages\">{props.errors.username}</p>\n        <input\n          className=\"form-control form-control-lg\"\n          type=\"text\"\n          placeholder=\"Username\"\n          name=\"username\"\n          value={props.values.username}\n          onChange={props.handleChange}\n        />\n      </fieldset>\n      <fieldset className=\"form-group\">\n        <p className=\"error-messages\">{props.errors.email}</p>\n        <input\n          className=\"form-control form-control-lg\"\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={props.values.email}\n          onChange={props.handleChange}\n        />\n      </fieldset>\n      <fieldset className=\"form-group\">\n        <p className=\"error-messages\">{props.errors.password}</p>\n        <input\n          className=\"form-control form-control-lg\"\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={props.values.password}\n          onChange={props.handleChange}\n        />\n      </fieldset>\n      <button\n        className=\"btn btn-lg btn-primary pull-xs-right\"\n        disabled={!props.isValid || !props.values.email}\n      >\n        Sign up\n      </button>\n    </form>\n  );\n}\n\nconst FormikFormSignUp = withFormik({\n  mapPropsToValues() {\n    // Init form field\n    return {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    };\n  },\n  validationSchema: Yup.object().shape({\n    // Validate form field\n    username: Yup.string().required(\"Username is required\"),\n    email: Yup.string().email().required(\"Email is required\"),\n    password: Yup.string().required(\"Please provide a valid password\"),\n  }),\n  handleSubmit: () => {},\n})(FormSignUp);\n\nexport default FormikFormSignUp;\n"]},"metadata":{},"sourceType":"module"}