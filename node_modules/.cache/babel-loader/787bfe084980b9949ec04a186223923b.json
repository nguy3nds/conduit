{"ast":null,"code":"import _slicedToArray from\"/Users/nguyencanhnguyen/Public/Development/condi-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{withFormik}from\"formik\";import*as Yup from\"yup\";import{useDispatch}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{postUsersSignIn}from\"../../apis\";import{saveUserInStore}from\"../../../../redux/actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FormLogin(props){var dispatch=useDispatch();var history=useHistory();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var handleSubmit=function handleSubmit(e){e.preventDefault();var _props$values=props.values,email=_props$values.email,password=_props$values.password;postUsersSignIn({email:email,password:password}).then(function(res){var user=res.data.user;history.push(\"/\");dispatch(saveUserInStore.saveUserInStoreSuccess({user:user}));window.localStorage.setItem(\"jwtToken\",user.token);}).catch(function(e){return setError(true);});};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"fieldset\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"error-messages\",children:error&&\"Email or password is invalid\"}),/*#__PURE__*/_jsx(\"p\",{className:\"error-messages\",children:props.errors.email}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control form-control-lg\",type:\"text\",placeholder:\"Email\",name:\"email\",value:props.values.email,onChange:props.handleChange})]}),/*#__PURE__*/_jsxs(\"fieldset\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"error-messages\",children:props.errors.password}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control form-control-lg\",type:\"password\",placeholder:\"Password\",name:\"password\",value:props.values.password,onChange:props.handleChange})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-lg btn-primary pull-xs-right\",disabled:!props.isValid||!props.values.email,children:\"Sign in\"})]});}var FormikFormLogin=withFormik({mapPropsToValues:function mapPropsToValues(){// Init form field\nreturn{email:\"\",password:\"\"};},validationSchema:Yup.object().shape({// Validate form field\nemail:Yup.string().email().required(\"Email is required\"),password:Yup.string().required(\"Please provide a valid password\")}),handleSubmit:function handleSubmit(){}})(FormLogin);export default FormikFormLogin;","map":{"version":3,"sources":["/Users/nguyencanhnguyen/Public/Development/condi-app/src/pages/SignIn/components/FormSignIn/index.tsx"],"names":["React","useState","withFormik","Yup","useDispatch","useHistory","postUsersSignIn","saveUserInStore","FormLogin","props","dispatch","history","error","setError","handleSubmit","e","preventDefault","values","email","password","then","res","user","data","push","saveUserInStoreSuccess","window","localStorage","setItem","token","catch","errors","handleChange","isValid","FormikFormLogin","mapPropsToValues","validationSchema","object","shape","string","required"],"mappings":"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","sourcesContent":["import React, { SyntheticEvent, useState } from \"react\";\nimport { withFormik, InjectedFormikProps } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { postUsersSignIn } from \"../../apis\";\nimport { saveUserInStore } from \"../../../../redux/actions\";\nimport { FormProps, FormValues } from \"./interface\";\n\nfunction FormLogin(props: InjectedFormikProps<FormProps, FormValues>) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [error, setError] = useState(false);\n\n  const handleSubmit = (e: SyntheticEvent) => {\n    e.preventDefault();\n    const { email, password } = props.values;\n    postUsersSignIn({ email, password })\n      .then((res) => {\n        const user = res.data.user;\n        history.push(\"/\");\n        dispatch(saveUserInStore.saveUserInStoreSuccess({ user }));\n        window.localStorage.setItem(\"jwtToken\", user.token);\n      })\n      .catch((e) => setError(true));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <fieldset className=\"form-group\">\n        <p className=\"error-messages\">\n          {error && \"Email or password is invalid\"}\n        </p>\n        <p className=\"error-messages\">{props.errors.email}</p>\n        <input\n          className=\"form-control form-control-lg\"\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={props.values.email}\n          onChange={props.handleChange}\n        />\n      </fieldset>\n      <fieldset className=\"form-group\">\n        <p className=\"error-messages\">{props.errors.password}</p>\n        <input\n          className=\"form-control form-control-lg\"\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={props.values.password}\n          onChange={props.handleChange}\n        />\n      </fieldset>\n      <button\n        className=\"btn btn-lg btn-primary pull-xs-right\"\n        disabled={!props.isValid || !props.values.email}\n      >\n        Sign in\n      </button>\n    </form>\n  );\n}\n\nconst FormikFormLogin = withFormik({\n  mapPropsToValues() {\n    // Init form field\n    return {\n      email: \"\",\n      password: \"\",\n    };\n  },\n  validationSchema: Yup.object().shape({\n    // Validate form field\n    email: Yup.string().email().required(\"Email is required\"),\n    password: Yup.string().required(\"Please provide a valid password\"),\n  }),\n  handleSubmit: () => {},\n})(FormLogin);\n\nexport default FormikFormLogin;\n"]},"metadata":{},"sourceType":"module"}