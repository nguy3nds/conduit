{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom\";import\"./index.css\";import App from\"./App\";import{Provider}from\"react-redux\";import{createStore,applyMiddleware}from\"redux\";import createSagaMiddleware from\"redux-saga\";import mySaga from\"./redux/sagas\";import reducers from\"./redux/reducers\";// import { composeWithDevTools } from \"redux-devtools-extension\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";var sagaMiddleware=createSagaMiddleware();var store=createStore(reducers,applyMiddleware(sagaMiddleware));sagaMiddleware.run(mySaga);ReactDOM.render(/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(App,{})}),document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/nguyencanhnguyen/Public/Development/condi-app/src/index.tsx"],"names":["React","ReactDOM","App","Provider","createStore","applyMiddleware","createSagaMiddleware","mySaga","reducers","sagaMiddleware","store","run","render","document","getElementById"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CACA;2CAEA,GAAMC,CAAAA,cAAc,CAAGH,oBAAoB,EAA3C,CAEA,GAAMI,CAAAA,KAAK,CAAGN,WAAW,CAACI,QAAD,CAAWH,eAAe,CAACI,cAAD,CAA1B,CAAzB,CAEAA,cAAc,CAACE,GAAf,CAAmBJ,MAAnB,EAEAN,QAAQ,CAACW,MAAT,cACE,KAAC,QAAD,EAAU,KAAK,CAAEF,KAAjB,uBACE,KAAC,GAAD,IADF,EADF,CAIEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./redux/sagas\";\nimport reducers from \"./redux/reducers\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nexport type RootState = ReturnType<typeof store.getState>;\nsagaMiddleware.run(mySaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}